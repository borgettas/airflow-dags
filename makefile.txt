SHELL := /bin/bash

image_repo=docker.pkg.github.com/borgettas/airflow-dags
container=docker_pkg_github_airflow_dags
image=$(image_repo)/airflow:latest
image=base
airflow_home=/
target=all
port=4000


HELP_FUNC = \
    %help; \
    while(<>) { \
        if(/^([a-z0-9_-]+):.*\#\#(?:@(\w+))?\s(.*)$$/) { \
            push(@{$$help{$$2}}, [$$1, $$3]); \
        } \
    }; \
    print "usage: make [target]\n\n"; \
    for ( sort keys %help ) { \
        print "$$_:\n"; \
        printf("  %-20s %s\n", $$_->[0], $$_->[1]) for @{$$help{$$_}}; \
        print "\n"; \
    }

.PHONY: help
help: ##@miscellaneous Show this help.
	@perl -e '$(HELP_FUNC)' $(MAKEFILE_LIST)

.PHONY: build
build: ##@docker Build docker image and create docker container
	# docker build . \
		--target app \
		--tag $(image);

.PHONY: airflowd
airflowd: ##@docker Starts container
	docker container create \
		--env AIRFLOW_HOME=$(airflow_home) \
		--env AIRFLOW__CORE__LOAD_EXAMPLES=FALSE \
		--env GROUP_ID=$(shell id -g) \
		--env USER_ID=$(shell id -u) \
		--name $(container) \
		--publish 8080:8080 \
		--volume $(shell pwd)/dags:$(airflow_home)/dags \
		--volume $(shell pwd)/scripts:$(airflow_home)/scripts \
			$(image) \
			$(airflow_home)/docker/startup.bash
	docker container start $(container)

.PHONY: stop
stop: ##@docker Stop Airflow container
	docker container stop $(container)

.PHONY: test
test: ##@docker Runs DAG definition and validation tests
	docker run \
		--env AIRFLOW_HOME=$(airflow_home) \
		--env AIRFLOW__CORE__LOAD_EXAMPLES=FALSE \
		--env GROUP_ID=$(shell id -g) \
		--env USER_ID=$(shell id -u) \
		--volume $(shell pwd)/tests:$(airflow_home)/tests \
		--volume $(shell pwd)/airflow/dags:$(airflow_home)/dags \
		--volume $(shell pwd)/airflow/plugins:$(airflow_home)/plugins \
		--volume $(shell pwd)/scripts:$(airflow_home)/scripts \
		--interactive \
		--rm \
		--tty \
			$(image) \
			$(airflow_home)/docker/test.bash $(target)

.PHONY: shell
shell: ##@docker Calls /bin/bash inside the docker container
	docker exec \
		--workdir $(airflow_home) \
		--interactive \
		--tty \
			$(container) \
			/bin/bash

.PHONY: clean
clean: ##@miscellaneous Remove created artifacts
	docker container rm $(container) || true;
	docker image rm --force $(image) || true

# Footer